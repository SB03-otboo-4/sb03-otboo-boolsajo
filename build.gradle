plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = true
        xml.required  = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/Q*.class',
                    '**/*Dto*.class',
                    '**/config/**',
                    '**/exception/**'
            ])
        }))
    }
}

group = 'com.sprint'
version = '0.0.1-SNAPSHOT'
description = 'SB03-Otboo-Boolsajo'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.nimbusds:nimbus-jose-jwt:10.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.commons:commons-lang3:3.13.0'

    // s3
    implementation platform("software.amazon.awssdk:bom:2.25.25")
    implementation "software.amazon.awssdk:s3"
    implementation "software.amazon.awssdk:sts"

    // db
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    // OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // QueryDSL(jpa)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // webclient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // spring batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // configuration-processor
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // retry
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Jsoup : HTML 파싱
    implementation 'org.jsoup:jsoup:1.16.1'

    // SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.12.0")
}

// QueryDsl : 자동 생성 소스 파일 저장 위치
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

// QueryDsl : 자동 생성 소스 파일 gradle clean으로 제거
clean {
    delete file(querydslDir);
}

//QueryDsl : 자바 컴파일할때, 자동 생성된 Q 클래스를 querydslSrcDir 경로에 생성
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)

}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}